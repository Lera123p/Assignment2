-> Sort: cw.total_spent  (actual time=0.112..0.112 rows=0 loops=1)
    -> Stream results  (cost=2.75 rows=0) (actual time=0.107..0.107 rows=0 loops=1)
        -> Inner hash join (c.customer_id = cw.customer_id)  (cost=2.75 rows=0) (actual time=0.106..0.106 rows=0 loops=1)
            -> Table scan on c  (cost=0.175 rows=2) (never executed)
            -> Hash
                -> Table scan on cw  (cost=2.5..2.5 rows=0) (actual time=0.101..0.101 rows=0 loops=1)
                    -> Materialize CTE customer_wasting  (cost=0..0 rows=0) (actual time=0.101..0.101 rows=0 loops=1)
                        -> Filter: (total_spent > 5000)  (actual time=0.092..0.092 rows=0 loops=1)
                            -> Table scan on <temporary>  (actual time=0.0895..0.0897 rows=2 loops=1)
                                -> Aggregate using temporary table  (actual time=0.0889..0.0889 rows=2 loops=1)
                                    -> Nested loop inner join  (cost=1.57 rows=0.111) (actual time=0.0633..0.0763 rows=2 loops=1)
                                        -> Nested loop inner join  (cost=1.28 rows=0.333) (actual time=0.0583..0.0675 rows=3 loops=1)
                                            -> Inner hash join (no condition)  (cost=1 rows=0.333) (actual time=0.0455..0.0476 rows=3 loops=1)
                                                -> Filter: (orders.order_date >= DATE'2024-01-01')  (cost=0.551 rows=1) (actual time=0.0065..0.008 rows=3 loops=1)
                                                    -> Table scan on orders  (cost=0.551 rows=3) (actual time=0.0054..0.0065 rows=3 loops=1)
                                                -> Hash
                                                    -> Filter: (c.category_name = 'Books')  (cost=0.45 rows=1) (actual time=0.0248..0.029 rows=1 loops=1)
                                                        -> Table scan on c  (cost=0.45 rows=2) (actual time=0.0228..0.0267 rows=2 loops=1)
                                            -> Filter: (op.product_id is not null)  (cost=0.35 rows=1) (actual time=0.00547..0.00627 rows=1 loops=3)
                                                -> Index lookup on op using order_id (order_id=orders.order_id)  (cost=0.35 rows=1) (actual time=0.00517..0.00597 rows=1 loops=3)
                                        -> Filter: (p.category_id = c.category_id)  (cost=0.283 rows=0.333) (actual time=0.00253..0.0026 rows=0.667 loops=3)
                                            -> Single-row index lookup on p using PRIMARY (product_id=op.product_id)  (cost=0.283 rows=1) (actual time=0.0021..0.00217 rows=1 loops=3)
